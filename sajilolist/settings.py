"""
Django settings for sajilolist project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""



from sajilolist.ckeditorConfigurations import *
# Build paths inside the project like this: BASE_DIR / 'subdir'.

from decouple import config
import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent


 #
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-pkok@ddw_lybe*x456y$pr+l=ri4@6go6cf@0)bfd)%*4$_txu'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles','MainApp','authentication',
    'django_ckeditor_5','ContactUs','RatingReviews','widget_tweaks','Blogs',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sajilolist.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'ContactUs.context_processors.contact_us_context',  # Custom context processor
                'authentication.context_processors.profile_context',  # Custom context processor
                'MainApp.context_processors.categories_context',
                  # Custom context processor 
                # Custom context processor
            ],
        },
    },
]

WSGI_APPLICATION = 'sajilolist.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'sajilolist',  # Replace with your MySQL database name
#         'USER': 'root',        # Replace with your MySQL username
#         'PASSWORD': '',        # Replace with your MySQL password
#         'HOST': 'localhost',   # Default is localhost if MySQL is running on the same server
#         'PORT': '3306',        # Default MySQL port
#         'OPTIONS': {
#             'charset': 'utf8mb4',
#             'init_command': "SET NAMES 'utf8mb4'",
#         },
#     }
# }

    # 'sqlite': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',  # Path to your SQLite database
    # },
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# settings.py  – add near the bottom
POST_CATEGORIES = [
    {"id": "realestate",              "name": "Real Estate"},
    {"id": "automobiles",             "name": "Automobiles"},
    {"id": "books_education",         "name": "Books & Education"},
    {"id": "health_beauty",           "name": "Health & Beauty"},
    {"id": "household_accessories",   "name": "Household Accessories"},
    {"id": "furniture_appliances",    "name": "Furniture & Appliances"},
    {"id": "pcs_peripherals",         "name": "PCs & Peripherals"},
    {"id": "musical_instruments",     "name": "Musical Instruments"},
    {"id": "mobile_devices_accessories","name": "Mobile Devices"},
    {"id": "electronics_appliances",  "name": "Electronics & Appliances"},
    {"id": "fashionwear_addons",      "name": "Fashionwear & Add‑ons"},
    {"id": "tools_machinery",         "name": "Tools & Machinery"},
    {"id": "cameras_accessories",     "name": "Cameras & Accessories"},
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
# settings.py

# settings.py
# settings.py




# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
 # For collectstatic


STATIC_ROOT = BASE_DIR / 'staticfiles'  # for production (collectstatic)

# Media files (Uploaded by users)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL='login'

VONAGE_API_KEY = 'a50c5ff1'
VONAGE_API_SECRET = 'fc1jfDZfctoWfxJ7'
