# Generated by Django 5.0 on 2025-06-20 13:28

import MainApp.models
import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('banner', models.ImageField(upload_to='ads_banners/')),
                ('link', models.URLField(max_length=500)),
                ('title', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Automobiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('vehicle_type', models.CharField(choices=[('car', 'Car'), ('bike', 'Bike'), ('scooter', 'Scooter'), ('auto', 'Auto Rickshaw'), ('truck', 'Truck'), ('van', 'Van'), ('jeep', 'Jeep'), ('bus', 'Bus'), ('tractor', 'Tractor')], max_length=20)),
                ('brand', models.CharField(choices=[('Toyota', 'Toyota'), ('Honda', 'Honda'), ('Suzuki', 'Suzuki'), ('Hyundai', 'Hyundai'), ('Kia', 'Kia'), ('Ford', 'Ford'), ('Nissan', 'Nissan'), ('Mahindra', 'Mahindra'), ('Tata', 'Tata'), ('Volkswagen', 'Volkswagen'), ('Chevrolet', 'Chevrolet'), ('BMW', 'BMW'), ('Mercedes-Benz', 'Mercedes-Benz'), ('Audi', 'Audi'), ('Jeep', 'Jeep'), ('Skoda', 'Skoda'), ('Renault', 'Renault'), ('TVS', 'TVS'), ('Bajaj', 'Bajaj'), ('Hero', 'Hero'), ('Royal Enfield', 'Royal Enfield'), ('Yamaha', 'Yamaha'), ('Piaggio', 'Piaggio'), ('Ashok Leyland', 'Ashok Leyland'), ('Eicher', 'Eicher'), ('Force Motors', 'Force Motors')], default='Toyota', max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('fuel_type', models.CharField(blank=True, choices=[('Petrol', 'Petrol'), ('Diesel', 'Diesel'), ('Electric', 'Electric'), ('Hybrid', 'Hybrid'), ('CNG', 'CNG'), ('LPG', 'LPG'), ('Other', 'Other')], default='Petrol', max_length=50, null=True)),
                ('year', models.PositiveIntegerField()),
                ('mileage', models.PositiveIntegerField()),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BooksEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('edition', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CamerasAccessories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('brand', models.CharField(choices=[('Canon', 'Canon'), ('Nikon', 'Nikon'), ('Sony', 'Sony'), ('Fujifilm', 'Fujifilm'), ('Panasonic', 'Panasonic'), ('Olympus', 'Olympus'), ('GoPro', 'GoPro'), ('Leica', 'Leica'), ('Pentax', 'Pentax'), ('Kodak', 'Kodak'), ('Sigma', 'Sigma'), ('Hasselblad', 'Hasselblad'), ('DJI', 'DJI'), ('Other', 'Other')], default='Canon', max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('megapixels', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectronicsAppliances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('brand', models.CharField(max_length=100)),
                ('warranty', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FashionwearAddons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('size', models.CharField(max_length=20)),
                ('gender', models.CharField(max_length=20)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoodBeverages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('brand', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('FOOD', 'Food'), ('BEVERAGE', 'Beverage'), ('SNACK', 'Snack'), ('ALCOHOL', 'Alcoholic Beverage'), ('NON_ALCOHOL', 'Non-Alcoholic Beverage')], default='FOOD', max_length=20)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('packaging', models.CharField(blank=True, help_text='e.g., Bottle, Box, Can', max_length=100, null=True)),
                ('quantity', models.CharField(blank=True, help_text='e.g., 500ml, 1kg, 12-pack', max_length=50, null=True)),
                ('allergen_info', models.TextField(blank=True, help_text='Allergen or dietary info if applicable', null=True)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FurnitureAppliances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('furniture_type', models.CharField(max_length=100)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HealthBeauty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HouseholdAccessories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('material', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MobileDevicesAccessories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('brand', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('storage_capacity', models.CharField(max_length=50)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicalInstruments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('instrument_type', models.CharField(max_length=100)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PCsPeripherals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('specs', django_ckeditor_5.fields.CKEditor5Field()),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RealEstate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('realestate_condition', models.CharField(choices=[('NEW', 'New'), ('EXCELLENT', 'Excellent'), ('GOOD', 'Good'), ('FAIR', 'Fair'), ('NEEDS_RENOVATION', 'Needs Renovation')], default='GOOD', max_length=20)),
                ('listing_type', models.CharField(choices=[('SALE_APARTMENT', 'Apartment (Sale)'), ('SALE_LAND', 'Land (Sale)'), ('SALE_HOUSE', 'House (Sale)'), ('RENT_APARTMENT', 'Apartment (Rent)'), ('RENT_HOUSE', 'House (Rent)'), ('RENT_LAND', 'Land (Rent)'), ('RENT_ROOMMATE', 'Room & Roommate (Rent)')], default='SALE_HOUSE', max_length=30)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ToolsMachinery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('NP', 'Nepal'), ('US', 'United States')], default='NP', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('RENTED', 'Rented'), ('NOT_AVAILABLE', 'Not Available')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('ANY', 'Any Condition'), ('BRAND_NEW', 'Brand New'), ('LIKE_NEW', 'Like New'), ('USED', 'Used'), ('NOT_WORKING', 'Not Working')], default='ANY', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('listed_date', models.DateField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('image1', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image2', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image3', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image4', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image5', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image6', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image7', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image8', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image9', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('image10', models.ImageField(blank=True, null=True, upload_to=MainApp.models.get_upload_path)),
                ('tool_type', models.CharField(max_length=100)),
                ('power_source', models.CharField(max_length=50)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('automobiles', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.automobiles')),
                ('books_education', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.bookseducation')),
                ('cameras_accessories', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.camerasaccessories')),
                ('electronics_appliances', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.electronicsappliances')),
                ('fashionwear_addons', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.fashionwearaddons')),
                ('food_beverages', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.foodbeverages')),
                ('furniture_appliances', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.furnitureappliances')),
                ('health_beauty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.healthbeauty')),
                ('household_accessories', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.householdaccessories')),
                ('mobile_devices_accessories', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.mobiledevicesaccessories')),
                ('musical_instruments', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.musicalinstruments')),
                ('pcs_peripherals', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.pcsperipherals')),
                ('realestate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.realestate')),
                ('tools_machinery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.toolsmachinery')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlists', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
